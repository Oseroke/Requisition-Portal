@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Response";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<script type="text/javascript">

    @if(TempData["Message"] != null) {<text>
            $(window).load(function()
                {
                $(document).ready(function()
                    {
                    swal({
                        title: "Message",
                        text: "@TempData["Message"]",
                        type: "info"
                        }
                    );
                });
            }); </text>
    }
</script>
<h2>Requisitions</h2>

@(Html.Kendo().Grid<Requisition_Portal.Models.RequisitionModel>()
                                        .Name("Grid")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(p => p.Id).Hidden(true);
                                            columns.Bound(p => p.Requestor);
                                            columns.Bound(p => p.Manager).Title("Approving Manager");
                                            columns.Bound(p => p.StatusString).Title("Status");
                                            columns.Bound(p => p.StatusDateString).Title("Status Date");
                                            //if(columns.Bound(p=> p.StatusID = (int)SystemEnums.))
                                            columns.Command(command => { command.Custom("ApproveRequest").Text("Approve Requisition").Click("approveRequisition").HtmlAttributes(new { style = "background-color:green;color:white" }); });
                                            columns.Command(command => { command.Custom("RejectRequest").Text("Reject Requisition").Click("rejectRequisition").HtmlAttributes(new { style = "background-color:maroon;color:white" }); });
                                        })
                    .Navigatable()
                    .Selectable()
                    .Sortable()
                //.Events(events => { events.DataBound("onDataBound"); })
                .ClientDetailTemplateId("template")
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.Manager);
                })
                .Create("Req_Create", "Requisition")
                .Read("OutstandingReqRead", "Requisition")
                .Update("Req_Update", "Requisition")
                .Destroy("Req_Destroy", "Requisition")
        )

)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<Requisition_Portal.Models.ReqItemModel>()
            .Name("grid_#=Id#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.ItemName).Width(70);
                columns.Bound(o => o.Quantity).Width(20);
                columns.Bound(o => o.ChargeCode.Code).Width(40).Title("Charge Code"); // escaped template expression, to be evaluated in the child/detail context
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(8)
                .Read(read => read.Action("ReadReqItems", "Requisition", new { requisitionID = "#=Id#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )
</script>
