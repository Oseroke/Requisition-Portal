@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Store";
}

<h2>Index</h2>

@(Html.Kendo().Grid<Requisition_Portal.Models.RequisitionModel>()
                                    .Name("Grid")
                                    .Columns(columns =>
                                    {
                                        columns.Bound(p => p.Id).Hidden(true);
                                        columns.Bound(p => p.Requestor);
                                        columns.Bound(p => p.Manager).Title("Approving Manager");
                                        columns.Bound(p => p.StatusString).Title("Status");
                                        columns.Bound(p => p.StatusDateString).Title("Status Date");
                                        columns.Command(command => { command.Custom("Complete Request").Click("issueItem"); });
                                    })
                .Navigatable()
                .Selectable()
                .Sortable()
                .ClientDetailTemplateId("template")
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.Manager);
                })
                .Create("Req_Create", "Store")
                .Read("Req_Read", "Store")
                .Update("Req_Update", "Store")
                .Destroy("Req_Destroy", "Store")
        )

)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<Requisition_Portal.Models.ReqItemModel>()
            .Name("grid_#=Id#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.Item).Width(70);
                columns.Bound(o => o.Quantity).Width(20);
                columns.Bound(o => o.ChargeCode).Width(40).Title("Charge Code"); // escaped template expression, to be evaluated in the child/detail context
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(8)
                .Read(read => read.Action("ReadReqItems", "Store", new { requisitionID = "#=Id#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )
</script>
<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }
</script>