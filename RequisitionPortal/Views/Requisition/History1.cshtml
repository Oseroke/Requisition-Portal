@using Kendo.Mvc.UI

@{
    ViewBag.Title = "History";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<script type="text/javascript">

    @if(TempData["Message"] != null) {<text>
            $(window).load(function()
                {
                $(document).ready(function()
                    {
                    @*swal({
                        title: "Message",
                        text: "@TempData["Message"]",
                        type: "info"
                        }
                    );*@
                    alert("@TempData["Message"].ToString()");

                });
            }); </text>
    }
</script>
<h2>Requisition History</h2>

@(Html.Kendo().Grid<RequisitionPortal.Models.RequisitionModel>()
                    .Name("Grid")
                    .Columns(columns =>
                    {
                    columns.Bound(p => p.Id).Hidden(true);
                    columns.Bound(p => p.Requestor).Filterable(filterable => filterable.UI("requestorFilter"));
                    columns.Bound(p => p.Manager).Title("Approving Manager");
                    columns.Bound(p => p.StatusString).Title("Status").Filterable(filterable => filterable.UI("statusFilter"));
                    columns.Bound(p => p.StatusDate).Title("Status Date").Format("{0:dd-MMM-yyyy}");

                    //columns.Command(command => { command.Custom("CancelRequest").Text("Cancel Request").Click("cancelRequisition").HtmlAttributes(new { style = "background-color:maroon;color:white" }); });

                    columns.Template(@< text ></ text >).ClientTemplate("<a class='btn btn-success' href='" + Url.Action("ViewItems", "Requisition") + "?requisitionId=#=Id#'>View Items</a>");

                    columns.Template(@<text></text>).ClientTemplate("# if(data.StatusID == 7) {#<a class='btn btn-primary' href='" + Url.Action("Replay", "Requisition") + "?requisitionId=#=Id#'>Update Requisition</a>#}#");
                    })
                    .Filterable(f => f
                    .Extra(false)
                    .Operators(op => op
                    .ForString(str => str.Clear()
                    .IsEqualTo("Is Equal To"))))
                    .Navigatable()
                    .Selectable()
                    .Sortable()
                    .Events(events => { events.DataBound("onDataBound"); })
                .ClientDetailTemplateId("template")
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .ServerOperation(false)
                .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.Manager);
                })
                .Create("Req_Create", "Requisition")
                .Read("Req_Read", "Requisition")
                .Update("Req_Update", "Requisition")
                .Destroy("Req_Destroy", "Requisition")
        )

)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<RequisitionPortal.Models.ReqItemModel>()
            .Name("grid_#=Id#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.ItemName).Width(70);
                columns.Bound(o => o.Quantity).Width(20);
                columns.Bound(o => o.ChargeCode.Code).Width(40).Title("Charge Code"); // escaped template expression, to be evaluated in the child/detail context
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(8)
                .Read(read => read.Action("ReadReqItems", "Requisition", new { requisitionID = "#=Id#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )
</script>
<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());

    }

    function requestorFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Requestor")"
                }
            },
            optionLabel: "--Select Value--"
        });
    }

    function managerFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Manager")"
                }
            },
            optionLabel: "--Select Value--"
        });
    }

    function statusFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Status")"
                }
            },
            optionLabel: "--Select Value--"
        });
    }



    function sync_handler(e) {
        this.read();
    }
</script>