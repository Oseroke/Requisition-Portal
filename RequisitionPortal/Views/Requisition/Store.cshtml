@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Store";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Outstanding Requisitions</h2>

@(Html.Kendo().Grid<RequisitionPortal.Models.RequisitionModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Id).Filterable(false);//s.Hidden(true);
            columns.Bound(p => p.Requestor).Filterable(filterable => filterable.UI("requestorFilter"));
            columns.Bound(p => p.Manager).Title("Approving Manager").Filterable(filterable => filterable.UI("managerFilter"));
            columns.Bound(p => p.StatusString).Title("Status");
            columns.Bound(p => p.StatusDate).Format("{0:dd-MMM-yyyy}").Title("Status Date");
            columns.Command(command => { command.Custom("CompleteRequest").Text("Complete Requisition").Click("issueItem").HtmlAttributes(new { style = "background-color:green;color:white" }); });
            columns.Command(command => { command.Custom("DeclineRequest").Text("Decline Requisition").Click("declineRequisition").HtmlAttributes(new { style = "background-color:maroon;color:white" }); });
        })
        .Filterable(f => f
                    .Extra(false)
                    .Operators(op => op
                    .ForString(str => str.Clear()
                    .IsEqualTo("Is Equal To"))))
        .Navigatable()
        .Selectable()
        .Sortable()
        .ClientDetailTemplateId("template")
        .DataSource(dataSource => dataSource
        .Ajax().PageSize(20)
        .Batch(true)
        .ServerOperation(false)
        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.Manager);
        })
        .Create("Req_Create", "Store")
        .Read("Req_Read", "Store")
        .Update("Req_Update", "Store")
        .Destroy("Req_Destroy", "Store")
)

)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<RequisitionPortal.Models.ReqItemModel>()
            .Name("grid_#=Id#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.ItemName).Width(70);
                columns.Bound(o => o.Quantity).Width(20);
                columns.Bound(o => o.ChargeCode.Code).Width(40).Title("Charge Code"); // escaped template expression, to be evaluated in the child/detail context
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(8)
                .Read(read => read.Action("ReadReqItems", "Store", new { requisitionID = "#=Id#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )
</script>
<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }

    function requestorFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Requestor")"
                }
            },
            optionLabel: "--Select Value--"
        });
    }

    function managerFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Manager")"
                }
            },
            optionLabel: "--Select Value--"
        });
    }

</script>